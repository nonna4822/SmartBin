
ultrasonic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000ae2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000ae2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ae2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a23  00000000  00000000  00000b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000784  00000000  00000000  000015af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000403  00000000  00000000  00001d33  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00002138  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000410  00000000  00000000  000021b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002d5  00000000  00000000  000025c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002895  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
   8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
   c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  10:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  14:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  18:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  1c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  20:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  24:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  28:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  30:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  34:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__vector_13>
  38:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  3c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  40:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  44:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  4c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  50:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  54:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  58:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  5c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  60:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  64:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0x116>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__divsf3_pse+0x5a>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <__vector_13+0x2>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <sendCommand+0x16>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_clear_bss>:
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	01 c0       	rjmp	.+2      	; 0x178 <.do_clear_bss_start>

00000176 <.do_clear_bss_loop>:
 176:	1d 92       	st	X+, r1

00000178 <.do_clear_bss_start>:
 178:	a2 30       	cpi	r26, 0x02	; 2
 17a:	b2 07       	cpc	r27, r18
 17c:	e1 f7       	brne	.-8      	; 0x176 <.do_clear_bss_loop>
 17e:	0e 94 02 01 	call	0x204	; 0x204 <main>
 182:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <_exit>

00000186 <__bad_interrupt>:
 186:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018a <__vector_13>:
#define Trigger_pin PORTB1 /* Trigger pin */

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 18a:	1f 92       	push	r1
 18c:	0f 92       	push	r0
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	0f 92       	push	r0
 192:	11 24       	eor	r1, r1
 194:	8f 93       	push	r24
 196:	9f 93       	push	r25
	TimerOverflow++; /* Increment Timer Overflow count */
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 19c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 1a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
}
 1aa:	9f 91       	pop	r25
 1ac:	8f 91       	pop	r24
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <sendCommand>:

void sendCommand(unsigned char command)
{
	CTRL_PORT &= ~(1 << RW) & ~(1 << RS);  // set RS to 0 to send command
 1b8:	98 b1       	in	r25, 0x08	; 8
 1ba:	9c 7f       	andi	r25, 0xFC	; 252
 1bc:	98 b9       	out	0x08, r25	; 8
	DATA_PORT = command;
 1be:	8b b9       	out	0x0b, r24	; 11
	CTRL_PORT |= (1 << E); // send short pulse to finish transfer
 1c0:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	8f ec       	ldi	r24, 0xCF	; 207
 1c4:	97 e0       	ldi	r25, 0x07	; 7
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <sendCommand+0xe>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <sendCommand+0x14>
 1cc:	00 00       	nop
	_delay_ms(1);
	CTRL_PORT &= ~(1 << E);
 1ce:	42 98       	cbi	0x08, 2	; 8
 1d0:	8f ec       	ldi	r24, 0xCF	; 207
 1d2:	97 e0       	ldi	r25, 0x07	; 7
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <sendCommand+0x1c>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <sendCommand+0x22>
 1da:	00 00       	nop
 1dc:	08 95       	ret

000001de <sendData>:
	_delay_ms(1);
}

void sendData(unsigned char data)
{
	CTRL_PORT &= ~(1 << RW);
 1de:	40 98       	cbi	0x08, 0	; 8
	CTRL_PORT |= (1 << RS);	// set RS to 1 to send data
 1e0:	41 9a       	sbi	0x08, 1	; 8
	DATA_PORT = data;
 1e2:	8b b9       	out	0x0b, r24	; 11
	CTRL_PORT |= (1 << E); // send short pulse to finish transfer
 1e4:	42 9a       	sbi	0x08, 2	; 8
 1e6:	8f ec       	ldi	r24, 0xCF	; 207
 1e8:	97 e0       	ldi	r25, 0x07	; 7
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <sendData+0xc>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <sendData+0x12>
 1f0:	00 00       	nop
	_delay_ms(1);
	CTRL_PORT &= ~(1 << E);
 1f2:	42 98       	cbi	0x08, 2	; 8
 1f4:	8f ec       	ldi	r24, 0xCF	; 207
 1f6:	97 e0       	ldi	r25, 0x07	; 7
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <sendData+0x1a>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <sendData+0x20>
 1fe:	00 00       	nop
	_delay_ms(1);
	CTRL_PORT &= ~(1 << RS);
 200:	41 98       	cbi	0x08, 1	; 8
 202:	08 95       	ret

00000204 <main>:
}

int main(void)
{
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	cd b7       	in	r28, 0x3d	; 61
 20a:	de b7       	in	r29, 0x3e	; 62
 20c:	64 97       	sbiw	r28, 0x14	; 20
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	f8 94       	cli
 212:	de bf       	out	0x3e, r29	; 62
 214:	0f be       	out	0x3f, r0	; 63
 216:	cd bf       	out	0x3d, r28	; 61
	double distance;
	long count;
	
	// initialize LCD
	CTRL_DDR |= (1 << RW) | (1 << RS) | (1 << E);
 218:	87 b1       	in	r24, 0x07	; 7
 21a:	87 60       	ori	r24, 0x07	; 7
 21c:	87 b9       	out	0x07, r24	; 7
	CTRL_PORT &= ~(1 << RW) & ~(1 << RS) & ~(1 << E);
 21e:	88 b1       	in	r24, 0x08	; 8
 220:	88 7f       	andi	r24, 0xF8	; 248
 222:	88 b9       	out	0x08, r24	; 8
	DATA_DDR = 0xFF;
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	8a b9       	out	0x0a, r24	; 10
	DATA_PORT = 0;
 228:	1b b8       	out	0x0b, r1	; 11
	
	DDRB |= (1<<PORTB1);
 22a:	21 9a       	sbi	0x04, 1	; 4
	PORTB |= (1<<PORTB0);
 22c:	28 9a       	sbi	0x05, 0	; 5

	sei();                /* Enable global interrupt */
 22e:	78 94       	sei
	TIMSK1 = (1 << TOIE1); /* Enable Timer1 overflow interrupts */
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TCCR1A = 0;           /* Set all bit to zero Normal operation */
 236:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	
	sendCommand(0x38);
 23a:	88 e3       	ldi	r24, 0x38	; 56
 23c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
	sendCommand(0x0E);
 240:	8e e0       	ldi	r24, 0x0E	; 14
 242:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
	sendCommand(0x01);  // clear screen
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
	sendCommand(0x06);	// shift cursor to right
 24c:	86 e0       	ldi	r24, 0x06	; 6
 24e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
	sendCommand(0x80);	// set cursor to first character on line 1
 252:	80 e8       	ldi	r24, 0x80	; 128
 254:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
		/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		PORTB |= (1 << Trigger_pin);
		_delay_us(10);
		PORTB &= (~(1 << Trigger_pin));

		TCNT1 = 0;         /* Clear Timer counter */
 258:	0f 2e       	mov	r0, r31
 25a:	f4 e8       	ldi	r31, 0x84	; 132
 25c:	8f 2e       	mov	r8, r31
 25e:	91 2c       	mov	r9, r1
 260:	f0 2d       	mov	r31, r0
		TCCR1B = 0x41;     /* Capture on rising edge, No prescaler*/
 262:	0f 2e       	mov	r0, r31
 264:	f1 e8       	ldi	r31, 0x81	; 129
 266:	af 2e       	mov	r10, r31
 268:	b1 2c       	mov	r11, r1
 26a:	f0 2d       	mov	r31, r0
 26c:	0f 2e       	mov	r0, r31
 26e:	f1 e4       	ldi	r31, 0x41	; 65
 270:	2f 2e       	mov	r2, r31
 272:	f0 2d       	mov	r31, r0
		TIFR1 = 1 << ICF1; /* Clear ICP flag (Input Capture flag) */
 274:	68 94       	set
 276:	33 24       	eor	r3, r3
 278:	35 f8       	bld	r3, 5
		count = ICR1 + (65535 * TimerOverflow); /* Take count */
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;
		
		char buffer[20];
		dtostrf(distance, 2, 2, buffer);
 27a:	ce 01       	movw	r24, r28
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	7c 01       	movw	r14, r24
		strcat(buffer," cm");
 280:	0f 2e       	mov	r0, r31
 282:	f0 e2       	ldi	r31, 0x20	; 32
 284:	6f 2e       	mov	r6, r31
 286:	f3 e6       	ldi	r31, 0x63	; 99
 288:	7f 2e       	mov	r7, r31
 28a:	f0 2d       	mov	r31, r0
 28c:	0f 2e       	mov	r0, r31
 28e:	fd e6       	ldi	r31, 0x6D	; 109
 290:	4f 2e       	mov	r4, r31
 292:	51 2c       	mov	r5, r1
 294:	f0 2d       	mov	r31, r0
	sendCommand(0x06);	// shift cursor to right
	sendCommand(0x80);	// set cursor to first character on line 1
	
	while (1)
	{
		sendCommand(0x01);
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
		sendCommand(0x80);
 29c:	80 e8       	ldi	r24, 0x80	; 128
 29e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <sendCommand>
		
		int i=0;
		
		/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		PORTB |= (1 << Trigger_pin);
 2a2:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a4:	9a e1       	ldi	r25, 0x1A	; 26
 2a6:	9a 95       	dec	r25
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <main+0xa2>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0xa8>
		_delay_us(10);
		PORTB &= (~(1 << Trigger_pin));
 2ac:	29 98       	cbi	0x05, 1	; 5

		TCNT1 = 0;         /* Clear Timer counter */
 2ae:	f4 01       	movw	r30, r8
 2b0:	11 82       	std	Z+1, r1	; 0x01
 2b2:	10 82       	st	Z, r1
		TCCR1B = 0x41;     /* Capture on rising edge, No prescaler*/
 2b4:	f5 01       	movw	r30, r10
 2b6:	20 82       	st	Z, r2
		TIFR1 = 1 << ICF1; /* Clear ICP flag (Input Capture flag) */
 2b8:	36 ba       	out	0x16, r3	; 22
		TIFR1 = 1 << TOV1; /* Clear Timer Overflow flag */
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	86 bb       	out	0x16, r24	; 22

		/*Calculate width of Echo by Input Capture (ICP) */

		while ((TIFR1 & (1 << ICF1)) == 0);              /* Wait for rising edge */
 2be:	b5 9b       	sbis	0x16, 5	; 22
 2c0:	fe cf       	rjmp	.-4      	; 0x2be <main+0xba>
		TCNT1 = 0;         /* Clear Timer counter */
 2c2:	f4 01       	movw	r30, r8
 2c4:	11 82       	std	Z+1, r1	; 0x01
 2c6:	10 82       	st	Z, r1
		TCCR1B = 0x01;     /* Capture on falling edge, No prescaler */
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	f5 01       	movw	r30, r10
 2cc:	80 83       	st	Z, r24
		TIFR1 = 1 << ICF1; /* Clear ICP flag (Input Capture flag) */
 2ce:	36 ba       	out	0x16, r3	; 22
		TIFR1 = 1 << TOV1; /* Clear Timer Overflow flag */
 2d0:	86 bb       	out	0x16, r24	; 22
		TimerOverflow = 0; /* Clear Timer overflow count */
 2d2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 2d6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>

		while ((TIFR1 & (1 << ICF1)) == 0);  /* Wait for falling edge */
 2da:	b5 9b       	sbis	0x16, 5	; 22
 2dc:	fe cf       	rjmp	.-4      	; 0x2da <main+0xd6>
		count = ICR1 + (65535 * TimerOverflow); /* Take count */
 2de:	e6 e8       	ldi	r30, 0x86	; 134
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	60 81       	ld	r22, Z
 2e4:	71 81       	ldd	r23, Z+1	; 0x01
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;
		
		char buffer[20];
		dtostrf(distance, 2, 2, buffer);
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 20 02 	call	0x440	; 0x440 <__floatsisf>
 2ee:	29 e2       	ldi	r18, 0x29	; 41
 2f0:	3c e3       	ldi	r19, 0x3C	; 60
 2f2:	49 ee       	ldi	r20, 0xE9	; 233
 2f4:	53 e4       	ldi	r21, 0x43	; 67
 2f6:	0e 94 ac 01 	call	0x358	; 0x358 <__divsf3>
 2fa:	87 01       	movw	r16, r14
 2fc:	22 e0       	ldi	r18, 0x02	; 2
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	42 e0       	ldi	r20, 0x02	; 2
 302:	50 e0       	ldi	r21, 0x00	; 0
 304:	0e 94 ac 02 	call	0x558	; 0x558 <dtostrf>
		strcat(buffer," cm");
 308:	f7 01       	movw	r30, r14
 30a:	01 90       	ld	r0, Z+
 30c:	00 20       	and	r0, r0
 30e:	e9 f7       	brne	.-6      	; 0x30a <main+0x106>
 310:	31 97       	sbiw	r30, 0x01	; 1
 312:	71 82       	std	Z+1, r7	; 0x01
 314:	60 82       	st	Z, r6
 316:	53 82       	std	Z+3, r5	; 0x03
 318:	42 82       	std	Z+2, r4	; 0x02
 31a:	67 01       	movw	r12, r14
		for (i=0; i<strlen(buffer); i++)
 31c:	00 e0       	ldi	r16, 0x00	; 0
 31e:	10 e0       	ldi	r17, 0x00	; 0
 320:	07 c0       	rjmp	.+14     	; 0x330 <main+0x12c>
		{
			sendData(buffer[i]);
 322:	f6 01       	movw	r30, r12
 324:	81 91       	ld	r24, Z+
 326:	6f 01       	movw	r12, r30
 328:	0e 94 ef 00 	call	0x1de	; 0x1de <sendData>
		distance = (double)count / 466.47;
		
		char buffer[20];
		dtostrf(distance, 2, 2, buffer);
		strcat(buffer," cm");
		for (i=0; i<strlen(buffer); i++)
 32c:	0f 5f       	subi	r16, 0xFF	; 255
 32e:	1f 4f       	sbci	r17, 0xFF	; 255
 330:	f7 01       	movw	r30, r14
 332:	01 90       	ld	r0, Z+
 334:	00 20       	and	r0, r0
 336:	e9 f7       	brne	.-6      	; 0x332 <main+0x12e>
 338:	31 97       	sbiw	r30, 0x01	; 1
 33a:	ee 19       	sub	r30, r14
 33c:	ff 09       	sbc	r31, r15
 33e:	0e 17       	cp	r16, r30
 340:	1f 07       	cpc	r17, r31
 342:	78 f3       	brcs	.-34     	; 0x322 <main+0x11e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 344:	ff e7       	ldi	r31, 0x7F	; 127
 346:	2a e1       	ldi	r18, 0x1A	; 26
 348:	86 e0       	ldi	r24, 0x06	; 6
 34a:	f1 50       	subi	r31, 0x01	; 1
 34c:	20 40       	sbci	r18, 0x00	; 0
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <main+0x146>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x150>
 354:	00 00       	nop
		{
			sendData(buffer[i]);
		}
		
		_delay_ms(250);
	}
 356:	9f cf       	rjmp	.-194    	; 0x296 <main+0x92>

00000358 <__divsf3>:
 358:	0e 94 c0 01 	call	0x380	; 0x380 <__divsf3x>
 35c:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_round>
 360:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_pscB>
 364:	58 f0       	brcs	.+22     	; 0x37c <__divsf3+0x24>
 366:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_pscA>
 36a:	40 f0       	brcs	.+16     	; 0x37c <__divsf3+0x24>
 36c:	29 f4       	brne	.+10     	; 0x378 <__divsf3+0x20>
 36e:	5f 3f       	cpi	r21, 0xFF	; 255
 370:	29 f0       	breq	.+10     	; 0x37c <__divsf3+0x24>
 372:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_inf>
 376:	51 11       	cpse	r21, r1
 378:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_szero>
 37c:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__fp_nan>

00000380 <__divsf3x>:
 380:	0e 94 83 02 	call	0x506	; 0x506 <__fp_split3>
 384:	68 f3       	brcs	.-38     	; 0x360 <__divsf3+0x8>

00000386 <__divsf3_pse>:
 386:	99 23       	and	r25, r25
 388:	b1 f3       	breq	.-20     	; 0x376 <__divsf3+0x1e>
 38a:	55 23       	and	r21, r21
 38c:	91 f3       	breq	.-28     	; 0x372 <__divsf3+0x1a>
 38e:	95 1b       	sub	r25, r21
 390:	55 0b       	sbc	r21, r21
 392:	bb 27       	eor	r27, r27
 394:	aa 27       	eor	r26, r26
 396:	62 17       	cp	r22, r18
 398:	73 07       	cpc	r23, r19
 39a:	84 07       	cpc	r24, r20
 39c:	38 f0       	brcs	.+14     	; 0x3ac <__divsf3_pse+0x26>
 39e:	9f 5f       	subi	r25, 0xFF	; 255
 3a0:	5f 4f       	sbci	r21, 0xFF	; 255
 3a2:	22 0f       	add	r18, r18
 3a4:	33 1f       	adc	r19, r19
 3a6:	44 1f       	adc	r20, r20
 3a8:	aa 1f       	adc	r26, r26
 3aa:	a9 f3       	breq	.-22     	; 0x396 <__divsf3_pse+0x10>
 3ac:	35 d0       	rcall	.+106    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ae:	0e 2e       	mov	r0, r30
 3b0:	3a f0       	brmi	.+14     	; 0x3c0 <__divsf3_pse+0x3a>
 3b2:	e0 e8       	ldi	r30, 0x80	; 128
 3b4:	32 d0       	rcall	.+100    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3b6:	91 50       	subi	r25, 0x01	; 1
 3b8:	50 40       	sbci	r21, 0x00	; 0
 3ba:	e6 95       	lsr	r30
 3bc:	00 1c       	adc	r0, r0
 3be:	ca f7       	brpl	.-14     	; 0x3b2 <__divsf3_pse+0x2c>
 3c0:	2b d0       	rcall	.+86     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3c2:	fe 2f       	mov	r31, r30
 3c4:	29 d0       	rcall	.+82     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3c6:	66 0f       	add	r22, r22
 3c8:	77 1f       	adc	r23, r23
 3ca:	88 1f       	adc	r24, r24
 3cc:	bb 1f       	adc	r27, r27
 3ce:	26 17       	cp	r18, r22
 3d0:	37 07       	cpc	r19, r23
 3d2:	48 07       	cpc	r20, r24
 3d4:	ab 07       	cpc	r26, r27
 3d6:	b0 e8       	ldi	r27, 0x80	; 128
 3d8:	09 f0       	breq	.+2      	; 0x3dc <__divsf3_pse+0x56>
 3da:	bb 0b       	sbc	r27, r27
 3dc:	80 2d       	mov	r24, r0
 3de:	bf 01       	movw	r22, r30
 3e0:	ff 27       	eor	r31, r31
 3e2:	93 58       	subi	r25, 0x83	; 131
 3e4:	5f 4f       	sbci	r21, 0xFF	; 255
 3e6:	3a f0       	brmi	.+14     	; 0x3f6 <__divsf3_pse+0x70>
 3e8:	9e 3f       	cpi	r25, 0xFE	; 254
 3ea:	51 05       	cpc	r21, r1
 3ec:	78 f0       	brcs	.+30     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ee:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_inf>
 3f2:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_szero>
 3f6:	5f 3f       	cpi	r21, 0xFF	; 255
 3f8:	e4 f3       	brlt	.-8      	; 0x3f2 <__divsf3_pse+0x6c>
 3fa:	98 3e       	cpi	r25, 0xE8	; 232
 3fc:	d4 f3       	brlt	.-12     	; 0x3f2 <__divsf3_pse+0x6c>
 3fe:	86 95       	lsr	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b7 95       	ror	r27
 406:	f7 95       	ror	r31
 408:	9f 5f       	subi	r25, 0xFF	; 255
 40a:	c9 f7       	brne	.-14     	; 0x3fe <__divsf3_pse+0x78>
 40c:	88 0f       	add	r24, r24
 40e:	91 1d       	adc	r25, r1
 410:	96 95       	lsr	r25
 412:	87 95       	ror	r24
 414:	97 f9       	bld	r25, 7
 416:	08 95       	ret
 418:	e1 e0       	ldi	r30, 0x01	; 1
 41a:	66 0f       	add	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	88 1f       	adc	r24, r24
 420:	bb 1f       	adc	r27, r27
 422:	62 17       	cp	r22, r18
 424:	73 07       	cpc	r23, r19
 426:	84 07       	cpc	r24, r20
 428:	ba 07       	cpc	r27, r26
 42a:	20 f0       	brcs	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	62 1b       	sub	r22, r18
 42e:	73 0b       	sbc	r23, r19
 430:	84 0b       	sbc	r24, r20
 432:	ba 0b       	sbc	r27, r26
 434:	ee 1f       	adc	r30, r30
 436:	88 f7       	brcc	.-30     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 438:	e0 95       	com	r30
 43a:	08 95       	ret

0000043c <__floatunsisf>:
 43c:	e8 94       	clt
 43e:	09 c0       	rjmp	.+18     	; 0x452 <__floatsisf+0x12>

00000440 <__floatsisf>:
 440:	97 fb       	bst	r25, 7
 442:	3e f4       	brtc	.+14     	; 0x452 <__floatsisf+0x12>
 444:	90 95       	com	r25
 446:	80 95       	com	r24
 448:	70 95       	com	r23
 44a:	61 95       	neg	r22
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	99 23       	and	r25, r25
 454:	a9 f0       	breq	.+42     	; 0x480 <__floatsisf+0x40>
 456:	f9 2f       	mov	r31, r25
 458:	96 e9       	ldi	r25, 0x96	; 150
 45a:	bb 27       	eor	r27, r27
 45c:	93 95       	inc	r25
 45e:	f6 95       	lsr	r31
 460:	87 95       	ror	r24
 462:	77 95       	ror	r23
 464:	67 95       	ror	r22
 466:	b7 95       	ror	r27
 468:	f1 11       	cpse	r31, r1
 46a:	f8 cf       	rjmp	.-16     	; 0x45c <__floatsisf+0x1c>
 46c:	fa f4       	brpl	.+62     	; 0x4ac <__floatsisf+0x6c>
 46e:	bb 0f       	add	r27, r27
 470:	11 f4       	brne	.+4      	; 0x476 <__floatsisf+0x36>
 472:	60 ff       	sbrs	r22, 0
 474:	1b c0       	rjmp	.+54     	; 0x4ac <__floatsisf+0x6c>
 476:	6f 5f       	subi	r22, 0xFF	; 255
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	8f 4f       	sbci	r24, 0xFF	; 255
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	16 c0       	rjmp	.+44     	; 0x4ac <__floatsisf+0x6c>
 480:	88 23       	and	r24, r24
 482:	11 f0       	breq	.+4      	; 0x488 <__floatsisf+0x48>
 484:	96 e9       	ldi	r25, 0x96	; 150
 486:	11 c0       	rjmp	.+34     	; 0x4aa <__floatsisf+0x6a>
 488:	77 23       	and	r23, r23
 48a:	21 f0       	breq	.+8      	; 0x494 <__floatsisf+0x54>
 48c:	9e e8       	ldi	r25, 0x8E	; 142
 48e:	87 2f       	mov	r24, r23
 490:	76 2f       	mov	r23, r22
 492:	05 c0       	rjmp	.+10     	; 0x49e <__floatsisf+0x5e>
 494:	66 23       	and	r22, r22
 496:	71 f0       	breq	.+28     	; 0x4b4 <__floatsisf+0x74>
 498:	96 e8       	ldi	r25, 0x86	; 134
 49a:	86 2f       	mov	r24, r22
 49c:	70 e0       	ldi	r23, 0x00	; 0
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	2a f0       	brmi	.+10     	; 0x4ac <__floatsisf+0x6c>
 4a2:	9a 95       	dec	r25
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	da f7       	brpl	.-10     	; 0x4a2 <__floatsisf+0x62>
 4ac:	88 0f       	add	r24, r24
 4ae:	96 95       	lsr	r25
 4b0:	87 95       	ror	r24
 4b2:	97 f9       	bld	r25, 7
 4b4:	08 95       	ret

000004b6 <__fp_inf>:
 4b6:	97 f9       	bld	r25, 7
 4b8:	9f 67       	ori	r25, 0x7F	; 127
 4ba:	80 e8       	ldi	r24, 0x80	; 128
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	08 95       	ret

000004c2 <__fp_nan>:
 4c2:	9f ef       	ldi	r25, 0xFF	; 255
 4c4:	80 ec       	ldi	r24, 0xC0	; 192
 4c6:	08 95       	ret

000004c8 <__fp_pscA>:
 4c8:	00 24       	eor	r0, r0
 4ca:	0a 94       	dec	r0
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	18 06       	cpc	r1, r24
 4d2:	09 06       	cpc	r0, r25
 4d4:	08 95       	ret

000004d6 <__fp_pscB>:
 4d6:	00 24       	eor	r0, r0
 4d8:	0a 94       	dec	r0
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	05 06       	cpc	r0, r21
 4e2:	08 95       	ret

000004e4 <__fp_round>:
 4e4:	09 2e       	mov	r0, r25
 4e6:	03 94       	inc	r0
 4e8:	00 0c       	add	r0, r0
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__fp_round+0xc>
 4ec:	88 23       	and	r24, r24
 4ee:	52 f0       	brmi	.+20     	; 0x504 <__fp_round+0x20>
 4f0:	bb 0f       	add	r27, r27
 4f2:	40 f4       	brcc	.+16     	; 0x504 <__fp_round+0x20>
 4f4:	bf 2b       	or	r27, r31
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__fp_round+0x18>
 4f8:	60 ff       	sbrs	r22, 0
 4fa:	04 c0       	rjmp	.+8      	; 0x504 <__fp_round+0x20>
 4fc:	6f 5f       	subi	r22, 0xFF	; 255
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	08 95       	ret

00000506 <__fp_split3>:
 506:	57 fd       	sbrc	r21, 7
 508:	90 58       	subi	r25, 0x80	; 128
 50a:	44 0f       	add	r20, r20
 50c:	55 1f       	adc	r21, r21
 50e:	59 f0       	breq	.+22     	; 0x526 <__fp_splitA+0x10>
 510:	5f 3f       	cpi	r21, 0xFF	; 255
 512:	71 f0       	breq	.+28     	; 0x530 <__fp_splitA+0x1a>
 514:	47 95       	ror	r20

00000516 <__fp_splitA>:
 516:	88 0f       	add	r24, r24
 518:	97 fb       	bst	r25, 7
 51a:	99 1f       	adc	r25, r25
 51c:	61 f0       	breq	.+24     	; 0x536 <__fp_splitA+0x20>
 51e:	9f 3f       	cpi	r25, 0xFF	; 255
 520:	79 f0       	breq	.+30     	; 0x540 <__fp_splitA+0x2a>
 522:	87 95       	ror	r24
 524:	08 95       	ret
 526:	12 16       	cp	r1, r18
 528:	13 06       	cpc	r1, r19
 52a:	14 06       	cpc	r1, r20
 52c:	55 1f       	adc	r21, r21
 52e:	f2 cf       	rjmp	.-28     	; 0x514 <__fp_split3+0xe>
 530:	46 95       	lsr	r20
 532:	f1 df       	rcall	.-30     	; 0x516 <__fp_splitA>
 534:	08 c0       	rjmp	.+16     	; 0x546 <__fp_splitA+0x30>
 536:	16 16       	cp	r1, r22
 538:	17 06       	cpc	r1, r23
 53a:	18 06       	cpc	r1, r24
 53c:	99 1f       	adc	r25, r25
 53e:	f1 cf       	rjmp	.-30     	; 0x522 <__fp_splitA+0xc>
 540:	86 95       	lsr	r24
 542:	71 05       	cpc	r23, r1
 544:	61 05       	cpc	r22, r1
 546:	08 94       	sec
 548:	08 95       	ret

0000054a <__fp_zero>:
 54a:	e8 94       	clt

0000054c <__fp_szero>:
 54c:	bb 27       	eor	r27, r27
 54e:	66 27       	eor	r22, r22
 550:	77 27       	eor	r23, r23
 552:	cb 01       	movw	r24, r22
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <dtostrf>:
 558:	ef 92       	push	r14
 55a:	0f 93       	push	r16
 55c:	1f 93       	push	r17
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	e8 01       	movw	r28, r16
 564:	47 fd       	sbrc	r20, 7
 566:	02 c0       	rjmp	.+4      	; 0x56c <dtostrf+0x14>
 568:	34 e0       	ldi	r19, 0x04	; 4
 56a:	01 c0       	rjmp	.+2      	; 0x56e <dtostrf+0x16>
 56c:	34 e1       	ldi	r19, 0x14	; 20
 56e:	04 2e       	mov	r0, r20
 570:	00 0c       	add	r0, r0
 572:	55 0b       	sbc	r21, r21
 574:	57 ff       	sbrs	r21, 7
 576:	03 c0       	rjmp	.+6      	; 0x57e <dtostrf+0x26>
 578:	51 95       	neg	r21
 57a:	41 95       	neg	r20
 57c:	51 09       	sbc	r21, r1
 57e:	e3 2e       	mov	r14, r19
 580:	02 2f       	mov	r16, r18
 582:	24 2f       	mov	r18, r20
 584:	ae 01       	movw	r20, r28
 586:	0e 94 cc 02 	call	0x598	; 0x598 <dtoa_prf>
 58a:	ce 01       	movw	r24, r28
 58c:	df 91       	pop	r29
 58e:	cf 91       	pop	r28
 590:	1f 91       	pop	r17
 592:	0f 91       	pop	r16
 594:	ef 90       	pop	r14
 596:	08 95       	ret

00000598 <dtoa_prf>:
 598:	a9 e0       	ldi	r26, 0x09	; 9
 59a:	b0 e0       	ldi	r27, 0x00	; 0
 59c:	e2 ed       	ldi	r30, 0xD2	; 210
 59e:	f2 e0       	ldi	r31, 0x02	; 2
 5a0:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__prologue_saves__+0xc>
 5a4:	6a 01       	movw	r12, r20
 5a6:	12 2f       	mov	r17, r18
 5a8:	b0 2e       	mov	r11, r16
 5aa:	2b e3       	ldi	r18, 0x3B	; 59
 5ac:	20 17       	cp	r18, r16
 5ae:	20 f0       	brcs	.+8      	; 0x5b8 <dtoa_prf+0x20>
 5b0:	ff 24       	eor	r15, r15
 5b2:	f3 94       	inc	r15
 5b4:	f0 0e       	add	r15, r16
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <dtoa_prf+0x24>
 5b8:	2c e3       	ldi	r18, 0x3C	; 60
 5ba:	f2 2e       	mov	r15, r18
 5bc:	0f 2d       	mov	r16, r15
 5be:	27 e0       	ldi	r18, 0x07	; 7
 5c0:	ae 01       	movw	r20, r28
 5c2:	4f 5f       	subi	r20, 0xFF	; 255
 5c4:	5f 4f       	sbci	r21, 0xFF	; 255
 5c6:	0e 94 26 04 	call	0x84c	; 0x84c <__ftoa_engine>
 5ca:	bc 01       	movw	r22, r24
 5cc:	49 81       	ldd	r20, Y+1	; 0x01
 5ce:	84 2f       	mov	r24, r20
 5d0:	89 70       	andi	r24, 0x09	; 9
 5d2:	81 30       	cpi	r24, 0x01	; 1
 5d4:	31 f0       	breq	.+12     	; 0x5e2 <dtoa_prf+0x4a>
 5d6:	e1 fc       	sbrc	r14, 1
 5d8:	06 c0       	rjmp	.+12     	; 0x5e6 <dtoa_prf+0x4e>
 5da:	e0 fe       	sbrs	r14, 0
 5dc:	06 c0       	rjmp	.+12     	; 0x5ea <dtoa_prf+0x52>
 5de:	90 e2       	ldi	r25, 0x20	; 32
 5e0:	05 c0       	rjmp	.+10     	; 0x5ec <dtoa_prf+0x54>
 5e2:	9d e2       	ldi	r25, 0x2D	; 45
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <dtoa_prf+0x54>
 5e6:	9b e2       	ldi	r25, 0x2B	; 43
 5e8:	01 c0       	rjmp	.+2      	; 0x5ec <dtoa_prf+0x54>
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	5e 2d       	mov	r21, r14
 5ee:	50 71       	andi	r21, 0x10	; 16
 5f0:	43 ff       	sbrs	r20, 3
 5f2:	3c c0       	rjmp	.+120    	; 0x66c <dtoa_prf+0xd4>
 5f4:	91 11       	cpse	r25, r1
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <dtoa_prf+0x64>
 5f8:	83 e0       	ldi	r24, 0x03	; 3
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <dtoa_prf+0x66>
 5fc:	84 e0       	ldi	r24, 0x04	; 4
 5fe:	81 17       	cp	r24, r17
 600:	18 f4       	brcc	.+6      	; 0x608 <dtoa_prf+0x70>
 602:	21 2f       	mov	r18, r17
 604:	28 1b       	sub	r18, r24
 606:	01 c0       	rjmp	.+2      	; 0x60a <dtoa_prf+0x72>
 608:	20 e0       	ldi	r18, 0x00	; 0
 60a:	51 11       	cpse	r21, r1
 60c:	0b c0       	rjmp	.+22     	; 0x624 <dtoa_prf+0x8c>
 60e:	f6 01       	movw	r30, r12
 610:	82 2f       	mov	r24, r18
 612:	30 e2       	ldi	r19, 0x20	; 32
 614:	88 23       	and	r24, r24
 616:	19 f0       	breq	.+6      	; 0x61e <dtoa_prf+0x86>
 618:	31 93       	st	Z+, r19
 61a:	81 50       	subi	r24, 0x01	; 1
 61c:	fb cf       	rjmp	.-10     	; 0x614 <dtoa_prf+0x7c>
 61e:	c2 0e       	add	r12, r18
 620:	d1 1c       	adc	r13, r1
 622:	20 e0       	ldi	r18, 0x00	; 0
 624:	99 23       	and	r25, r25
 626:	29 f0       	breq	.+10     	; 0x632 <dtoa_prf+0x9a>
 628:	d6 01       	movw	r26, r12
 62a:	9c 93       	st	X, r25
 62c:	f6 01       	movw	r30, r12
 62e:	31 96       	adiw	r30, 0x01	; 1
 630:	6f 01       	movw	r12, r30
 632:	c6 01       	movw	r24, r12
 634:	03 96       	adiw	r24, 0x03	; 3
 636:	e2 fe       	sbrs	r14, 2
 638:	0a c0       	rjmp	.+20     	; 0x64e <dtoa_prf+0xb6>
 63a:	3e e4       	ldi	r19, 0x4E	; 78
 63c:	d6 01       	movw	r26, r12
 63e:	3c 93       	st	X, r19
 640:	41 e4       	ldi	r20, 0x41	; 65
 642:	11 96       	adiw	r26, 0x01	; 1
 644:	4c 93       	st	X, r20
 646:	11 97       	sbiw	r26, 0x01	; 1
 648:	12 96       	adiw	r26, 0x02	; 2
 64a:	3c 93       	st	X, r19
 64c:	06 c0       	rjmp	.+12     	; 0x65a <dtoa_prf+0xc2>
 64e:	3e e6       	ldi	r19, 0x6E	; 110
 650:	f6 01       	movw	r30, r12
 652:	30 83       	st	Z, r19
 654:	41 e6       	ldi	r20, 0x61	; 97
 656:	41 83       	std	Z+1, r20	; 0x01
 658:	32 83       	std	Z+2, r19	; 0x02
 65a:	fc 01       	movw	r30, r24
 65c:	32 2f       	mov	r19, r18
 65e:	40 e2       	ldi	r20, 0x20	; 32
 660:	33 23       	and	r19, r19
 662:	09 f4       	brne	.+2      	; 0x666 <dtoa_prf+0xce>
 664:	42 c0       	rjmp	.+132    	; 0x6ea <dtoa_prf+0x152>
 666:	41 93       	st	Z+, r20
 668:	31 50       	subi	r19, 0x01	; 1
 66a:	fa cf       	rjmp	.-12     	; 0x660 <dtoa_prf+0xc8>
 66c:	42 ff       	sbrs	r20, 2
 66e:	44 c0       	rjmp	.+136    	; 0x6f8 <dtoa_prf+0x160>
 670:	91 11       	cpse	r25, r1
 672:	02 c0       	rjmp	.+4      	; 0x678 <dtoa_prf+0xe0>
 674:	83 e0       	ldi	r24, 0x03	; 3
 676:	01 c0       	rjmp	.+2      	; 0x67a <dtoa_prf+0xe2>
 678:	84 e0       	ldi	r24, 0x04	; 4
 67a:	81 17       	cp	r24, r17
 67c:	18 f4       	brcc	.+6      	; 0x684 <dtoa_prf+0xec>
 67e:	21 2f       	mov	r18, r17
 680:	28 1b       	sub	r18, r24
 682:	01 c0       	rjmp	.+2      	; 0x686 <dtoa_prf+0xee>
 684:	20 e0       	ldi	r18, 0x00	; 0
 686:	51 11       	cpse	r21, r1
 688:	0b c0       	rjmp	.+22     	; 0x6a0 <dtoa_prf+0x108>
 68a:	f6 01       	movw	r30, r12
 68c:	82 2f       	mov	r24, r18
 68e:	30 e2       	ldi	r19, 0x20	; 32
 690:	88 23       	and	r24, r24
 692:	19 f0       	breq	.+6      	; 0x69a <dtoa_prf+0x102>
 694:	31 93       	st	Z+, r19
 696:	81 50       	subi	r24, 0x01	; 1
 698:	fb cf       	rjmp	.-10     	; 0x690 <dtoa_prf+0xf8>
 69a:	c2 0e       	add	r12, r18
 69c:	d1 1c       	adc	r13, r1
 69e:	20 e0       	ldi	r18, 0x00	; 0
 6a0:	99 23       	and	r25, r25
 6a2:	29 f0       	breq	.+10     	; 0x6ae <dtoa_prf+0x116>
 6a4:	d6 01       	movw	r26, r12
 6a6:	9c 93       	st	X, r25
 6a8:	f6 01       	movw	r30, r12
 6aa:	31 96       	adiw	r30, 0x01	; 1
 6ac:	6f 01       	movw	r12, r30
 6ae:	c6 01       	movw	r24, r12
 6b0:	03 96       	adiw	r24, 0x03	; 3
 6b2:	e2 fe       	sbrs	r14, 2
 6b4:	0b c0       	rjmp	.+22     	; 0x6cc <dtoa_prf+0x134>
 6b6:	39 e4       	ldi	r19, 0x49	; 73
 6b8:	d6 01       	movw	r26, r12
 6ba:	3c 93       	st	X, r19
 6bc:	3e e4       	ldi	r19, 0x4E	; 78
 6be:	11 96       	adiw	r26, 0x01	; 1
 6c0:	3c 93       	st	X, r19
 6c2:	11 97       	sbiw	r26, 0x01	; 1
 6c4:	36 e4       	ldi	r19, 0x46	; 70
 6c6:	12 96       	adiw	r26, 0x02	; 2
 6c8:	3c 93       	st	X, r19
 6ca:	07 c0       	rjmp	.+14     	; 0x6da <dtoa_prf+0x142>
 6cc:	39 e6       	ldi	r19, 0x69	; 105
 6ce:	f6 01       	movw	r30, r12
 6d0:	30 83       	st	Z, r19
 6d2:	3e e6       	ldi	r19, 0x6E	; 110
 6d4:	31 83       	std	Z+1, r19	; 0x01
 6d6:	36 e6       	ldi	r19, 0x66	; 102
 6d8:	32 83       	std	Z+2, r19	; 0x02
 6da:	fc 01       	movw	r30, r24
 6dc:	32 2f       	mov	r19, r18
 6de:	40 e2       	ldi	r20, 0x20	; 32
 6e0:	33 23       	and	r19, r19
 6e2:	19 f0       	breq	.+6      	; 0x6ea <dtoa_prf+0x152>
 6e4:	41 93       	st	Z+, r20
 6e6:	31 50       	subi	r19, 0x01	; 1
 6e8:	fb cf       	rjmp	.-10     	; 0x6e0 <dtoa_prf+0x148>
 6ea:	fc 01       	movw	r30, r24
 6ec:	e2 0f       	add	r30, r18
 6ee:	f1 1d       	adc	r31, r1
 6f0:	10 82       	st	Z, r1
 6f2:	8e ef       	ldi	r24, 0xFE	; 254
 6f4:	9f ef       	ldi	r25, 0xFF	; 255
 6f6:	a6 c0       	rjmp	.+332    	; 0x844 <dtoa_prf+0x2ac>
 6f8:	21 e0       	ldi	r18, 0x01	; 1
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	91 11       	cpse	r25, r1
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <dtoa_prf+0x16c>
 700:	20 e0       	ldi	r18, 0x00	; 0
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	16 16       	cp	r1, r22
 706:	17 06       	cpc	r1, r23
 708:	1c f4       	brge	.+6      	; 0x710 <dtoa_prf+0x178>
 70a:	fb 01       	movw	r30, r22
 70c:	31 96       	adiw	r30, 0x01	; 1
 70e:	02 c0       	rjmp	.+4      	; 0x714 <dtoa_prf+0x17c>
 710:	e1 e0       	ldi	r30, 0x01	; 1
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	2e 0f       	add	r18, r30
 716:	3f 1f       	adc	r19, r31
 718:	bb 20       	and	r11, r11
 71a:	21 f0       	breq	.+8      	; 0x724 <dtoa_prf+0x18c>
 71c:	eb 2d       	mov	r30, r11
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	31 96       	adiw	r30, 0x01	; 1
 722:	02 c0       	rjmp	.+4      	; 0x728 <dtoa_prf+0x190>
 724:	e0 e0       	ldi	r30, 0x00	; 0
 726:	f0 e0       	ldi	r31, 0x00	; 0
 728:	2e 0f       	add	r18, r30
 72a:	3f 1f       	adc	r19, r31
 72c:	e1 2f       	mov	r30, r17
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	2e 17       	cp	r18, r30
 732:	3f 07       	cpc	r19, r31
 734:	1c f4       	brge	.+6      	; 0x73c <dtoa_prf+0x1a4>
 736:	12 1b       	sub	r17, r18
 738:	21 2f       	mov	r18, r17
 73a:	01 c0       	rjmp	.+2      	; 0x73e <dtoa_prf+0x1a6>
 73c:	20 e0       	ldi	r18, 0x00	; 0
 73e:	8e 2d       	mov	r24, r14
 740:	88 71       	andi	r24, 0x18	; 24
 742:	59 f4       	brne	.+22     	; 0x75a <dtoa_prf+0x1c2>
 744:	f6 01       	movw	r30, r12
 746:	82 2f       	mov	r24, r18
 748:	30 e2       	ldi	r19, 0x20	; 32
 74a:	88 23       	and	r24, r24
 74c:	19 f0       	breq	.+6      	; 0x754 <dtoa_prf+0x1bc>
 74e:	31 93       	st	Z+, r19
 750:	81 50       	subi	r24, 0x01	; 1
 752:	fb cf       	rjmp	.-10     	; 0x74a <dtoa_prf+0x1b2>
 754:	c2 0e       	add	r12, r18
 756:	d1 1c       	adc	r13, r1
 758:	20 e0       	ldi	r18, 0x00	; 0
 75a:	99 23       	and	r25, r25
 75c:	29 f0       	breq	.+10     	; 0x768 <dtoa_prf+0x1d0>
 75e:	d6 01       	movw	r26, r12
 760:	9c 93       	st	X, r25
 762:	f6 01       	movw	r30, r12
 764:	31 96       	adiw	r30, 0x01	; 1
 766:	6f 01       	movw	r12, r30
 768:	51 11       	cpse	r21, r1
 76a:	0b c0       	rjmp	.+22     	; 0x782 <dtoa_prf+0x1ea>
 76c:	f6 01       	movw	r30, r12
 76e:	82 2f       	mov	r24, r18
 770:	90 e3       	ldi	r25, 0x30	; 48
 772:	88 23       	and	r24, r24
 774:	19 f0       	breq	.+6      	; 0x77c <dtoa_prf+0x1e4>
 776:	91 93       	st	Z+, r25
 778:	81 50       	subi	r24, 0x01	; 1
 77a:	fb cf       	rjmp	.-10     	; 0x772 <dtoa_prf+0x1da>
 77c:	c2 0e       	add	r12, r18
 77e:	d1 1c       	adc	r13, r1
 780:	20 e0       	ldi	r18, 0x00	; 0
 782:	0f 2d       	mov	r16, r15
 784:	06 0f       	add	r16, r22
 786:	9a 81       	ldd	r25, Y+2	; 0x02
 788:	34 2f       	mov	r19, r20
 78a:	30 71       	andi	r19, 0x10	; 16
 78c:	44 ff       	sbrs	r20, 4
 78e:	03 c0       	rjmp	.+6      	; 0x796 <dtoa_prf+0x1fe>
 790:	91 33       	cpi	r25, 0x31	; 49
 792:	09 f4       	brne	.+2      	; 0x796 <dtoa_prf+0x1fe>
 794:	01 50       	subi	r16, 0x01	; 1
 796:	10 16       	cp	r1, r16
 798:	24 f4       	brge	.+8      	; 0x7a2 <dtoa_prf+0x20a>
 79a:	09 30       	cpi	r16, 0x09	; 9
 79c:	18 f0       	brcs	.+6      	; 0x7a4 <dtoa_prf+0x20c>
 79e:	08 e0       	ldi	r16, 0x08	; 8
 7a0:	01 c0       	rjmp	.+2      	; 0x7a4 <dtoa_prf+0x20c>
 7a2:	01 e0       	ldi	r16, 0x01	; 1
 7a4:	ab 01       	movw	r20, r22
 7a6:	77 ff       	sbrs	r23, 7
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <dtoa_prf+0x216>
 7aa:	40 e0       	ldi	r20, 0x00	; 0
 7ac:	50 e0       	ldi	r21, 0x00	; 0
 7ae:	fb 01       	movw	r30, r22
 7b0:	e4 1b       	sub	r30, r20
 7b2:	f5 0b       	sbc	r31, r21
 7b4:	a1 e0       	ldi	r26, 0x01	; 1
 7b6:	b0 e0       	ldi	r27, 0x00	; 0
 7b8:	ac 0f       	add	r26, r28
 7ba:	bd 1f       	adc	r27, r29
 7bc:	ea 0f       	add	r30, r26
 7be:	fb 1f       	adc	r31, r27
 7c0:	8e e2       	ldi	r24, 0x2E	; 46
 7c2:	a8 2e       	mov	r10, r24
 7c4:	4b 01       	movw	r8, r22
 7c6:	80 1a       	sub	r8, r16
 7c8:	91 08       	sbc	r9, r1
 7ca:	0b 2d       	mov	r16, r11
 7cc:	10 e0       	ldi	r17, 0x00	; 0
 7ce:	11 95       	neg	r17
 7d0:	01 95       	neg	r16
 7d2:	11 09       	sbc	r17, r1
 7d4:	4f 3f       	cpi	r20, 0xFF	; 255
 7d6:	bf ef       	ldi	r27, 0xFF	; 255
 7d8:	5b 07       	cpc	r21, r27
 7da:	21 f4       	brne	.+8      	; 0x7e4 <dtoa_prf+0x24c>
 7dc:	d6 01       	movw	r26, r12
 7de:	ac 92       	st	X, r10
 7e0:	11 96       	adiw	r26, 0x01	; 1
 7e2:	6d 01       	movw	r12, r26
 7e4:	64 17       	cp	r22, r20
 7e6:	75 07       	cpc	r23, r21
 7e8:	2c f0       	brlt	.+10     	; 0x7f4 <dtoa_prf+0x25c>
 7ea:	84 16       	cp	r8, r20
 7ec:	95 06       	cpc	r9, r21
 7ee:	14 f4       	brge	.+4      	; 0x7f4 <dtoa_prf+0x25c>
 7f0:	81 81       	ldd	r24, Z+1	; 0x01
 7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <dtoa_prf+0x25e>
 7f4:	80 e3       	ldi	r24, 0x30	; 48
 7f6:	41 50       	subi	r20, 0x01	; 1
 7f8:	51 09       	sbc	r21, r1
 7fa:	31 96       	adiw	r30, 0x01	; 1
 7fc:	d6 01       	movw	r26, r12
 7fe:	11 96       	adiw	r26, 0x01	; 1
 800:	7d 01       	movw	r14, r26
 802:	40 17       	cp	r20, r16
 804:	51 07       	cpc	r21, r17
 806:	24 f0       	brlt	.+8      	; 0x810 <dtoa_prf+0x278>
 808:	d6 01       	movw	r26, r12
 80a:	8c 93       	st	X, r24
 80c:	67 01       	movw	r12, r14
 80e:	e2 cf       	rjmp	.-60     	; 0x7d4 <dtoa_prf+0x23c>
 810:	64 17       	cp	r22, r20
 812:	75 07       	cpc	r23, r21
 814:	39 f4       	brne	.+14     	; 0x824 <dtoa_prf+0x28c>
 816:	96 33       	cpi	r25, 0x36	; 54
 818:	20 f4       	brcc	.+8      	; 0x822 <dtoa_prf+0x28a>
 81a:	95 33       	cpi	r25, 0x35	; 53
 81c:	19 f4       	brne	.+6      	; 0x824 <dtoa_prf+0x28c>
 81e:	31 11       	cpse	r19, r1
 820:	01 c0       	rjmp	.+2      	; 0x824 <dtoa_prf+0x28c>
 822:	81 e3       	ldi	r24, 0x31	; 49
 824:	f6 01       	movw	r30, r12
 826:	80 83       	st	Z, r24
 828:	f7 01       	movw	r30, r14
 82a:	82 2f       	mov	r24, r18
 82c:	90 e2       	ldi	r25, 0x20	; 32
 82e:	88 23       	and	r24, r24
 830:	19 f0       	breq	.+6      	; 0x838 <dtoa_prf+0x2a0>
 832:	91 93       	st	Z+, r25
 834:	81 50       	subi	r24, 0x01	; 1
 836:	fb cf       	rjmp	.-10     	; 0x82e <dtoa_prf+0x296>
 838:	f7 01       	movw	r30, r14
 83a:	e2 0f       	add	r30, r18
 83c:	f1 1d       	adc	r31, r1
 83e:	10 82       	st	Z, r1
 840:	80 e0       	ldi	r24, 0x00	; 0
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	29 96       	adiw	r28, 0x09	; 9
 846:	ec e0       	ldi	r30, 0x0C	; 12
 848:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__epilogue_restores__+0xc>

0000084c <__ftoa_engine>:
 84c:	28 30       	cpi	r18, 0x08	; 8
 84e:	08 f0       	brcs	.+2      	; 0x852 <__ftoa_engine+0x6>
 850:	27 e0       	ldi	r18, 0x07	; 7
 852:	33 27       	eor	r19, r19
 854:	da 01       	movw	r26, r20
 856:	99 0f       	add	r25, r25
 858:	31 1d       	adc	r19, r1
 85a:	87 fd       	sbrc	r24, 7
 85c:	91 60       	ori	r25, 0x01	; 1
 85e:	00 96       	adiw	r24, 0x00	; 0
 860:	61 05       	cpc	r22, r1
 862:	71 05       	cpc	r23, r1
 864:	39 f4       	brne	.+14     	; 0x874 <__ftoa_engine+0x28>
 866:	32 60       	ori	r19, 0x02	; 2
 868:	2e 5f       	subi	r18, 0xFE	; 254
 86a:	3d 93       	st	X+, r19
 86c:	30 e3       	ldi	r19, 0x30	; 48
 86e:	2a 95       	dec	r18
 870:	e1 f7       	brne	.-8      	; 0x86a <__ftoa_engine+0x1e>
 872:	08 95       	ret
 874:	9f 3f       	cpi	r25, 0xFF	; 255
 876:	30 f0       	brcs	.+12     	; 0x884 <__ftoa_engine+0x38>
 878:	80 38       	cpi	r24, 0x80	; 128
 87a:	71 05       	cpc	r23, r1
 87c:	61 05       	cpc	r22, r1
 87e:	09 f0       	breq	.+2      	; 0x882 <__ftoa_engine+0x36>
 880:	3c 5f       	subi	r19, 0xFC	; 252
 882:	3c 5f       	subi	r19, 0xFC	; 252
 884:	3d 93       	st	X+, r19
 886:	91 30       	cpi	r25, 0x01	; 1
 888:	08 f0       	brcs	.+2      	; 0x88c <__ftoa_engine+0x40>
 88a:	80 68       	ori	r24, 0x80	; 128
 88c:	91 1d       	adc	r25, r1
 88e:	df 93       	push	r29
 890:	cf 93       	push	r28
 892:	1f 93       	push	r17
 894:	0f 93       	push	r16
 896:	ff 92       	push	r15
 898:	ef 92       	push	r14
 89a:	19 2f       	mov	r17, r25
 89c:	98 7f       	andi	r25, 0xF8	; 248
 89e:	96 95       	lsr	r25
 8a0:	e9 2f       	mov	r30, r25
 8a2:	96 95       	lsr	r25
 8a4:	96 95       	lsr	r25
 8a6:	e9 0f       	add	r30, r25
 8a8:	ff 27       	eor	r31, r31
 8aa:	ee 53       	subi	r30, 0x3E	; 62
 8ac:	ff 4f       	sbci	r31, 0xFF	; 255
 8ae:	99 27       	eor	r25, r25
 8b0:	33 27       	eor	r19, r19
 8b2:	ee 24       	eor	r14, r14
 8b4:	ff 24       	eor	r15, r15
 8b6:	a7 01       	movw	r20, r14
 8b8:	e7 01       	movw	r28, r14
 8ba:	05 90       	lpm	r0, Z+
 8bc:	08 94       	sec
 8be:	07 94       	ror	r0
 8c0:	28 f4       	brcc	.+10     	; 0x8cc <__ftoa_engine+0x80>
 8c2:	36 0f       	add	r19, r22
 8c4:	e7 1e       	adc	r14, r23
 8c6:	f8 1e       	adc	r15, r24
 8c8:	49 1f       	adc	r20, r25
 8ca:	51 1d       	adc	r21, r1
 8cc:	66 0f       	add	r22, r22
 8ce:	77 1f       	adc	r23, r23
 8d0:	88 1f       	adc	r24, r24
 8d2:	99 1f       	adc	r25, r25
 8d4:	06 94       	lsr	r0
 8d6:	a1 f7       	brne	.-24     	; 0x8c0 <__ftoa_engine+0x74>
 8d8:	05 90       	lpm	r0, Z+
 8da:	07 94       	ror	r0
 8dc:	28 f4       	brcc	.+10     	; 0x8e8 <__ftoa_engine+0x9c>
 8de:	e7 0e       	add	r14, r23
 8e0:	f8 1e       	adc	r15, r24
 8e2:	49 1f       	adc	r20, r25
 8e4:	56 1f       	adc	r21, r22
 8e6:	c1 1d       	adc	r28, r1
 8e8:	77 0f       	add	r23, r23
 8ea:	88 1f       	adc	r24, r24
 8ec:	99 1f       	adc	r25, r25
 8ee:	66 1f       	adc	r22, r22
 8f0:	06 94       	lsr	r0
 8f2:	a1 f7       	brne	.-24     	; 0x8dc <__ftoa_engine+0x90>
 8f4:	05 90       	lpm	r0, Z+
 8f6:	07 94       	ror	r0
 8f8:	28 f4       	brcc	.+10     	; 0x904 <__stack+0x5>
 8fa:	f8 0e       	add	r15, r24
 8fc:	49 1f       	adc	r20, r25
 8fe:	56 1f       	adc	r21, r22
 900:	c7 1f       	adc	r28, r23
 902:	d1 1d       	adc	r29, r1
 904:	88 0f       	add	r24, r24
 906:	99 1f       	adc	r25, r25
 908:	66 1f       	adc	r22, r22
 90a:	77 1f       	adc	r23, r23
 90c:	06 94       	lsr	r0
 90e:	a1 f7       	brne	.-24     	; 0x8f8 <__ftoa_engine+0xac>
 910:	05 90       	lpm	r0, Z+
 912:	07 94       	ror	r0
 914:	20 f4       	brcc	.+8      	; 0x91e <__stack+0x1f>
 916:	49 0f       	add	r20, r25
 918:	56 1f       	adc	r21, r22
 91a:	c7 1f       	adc	r28, r23
 91c:	d8 1f       	adc	r29, r24
 91e:	99 0f       	add	r25, r25
 920:	66 1f       	adc	r22, r22
 922:	77 1f       	adc	r23, r23
 924:	88 1f       	adc	r24, r24
 926:	06 94       	lsr	r0
 928:	a9 f7       	brne	.-22     	; 0x914 <__stack+0x15>
 92a:	84 91       	lpm	r24, Z
 92c:	10 95       	com	r17
 92e:	17 70       	andi	r17, 0x07	; 7
 930:	41 f0       	breq	.+16     	; 0x942 <__stack+0x43>
 932:	d6 95       	lsr	r29
 934:	c7 95       	ror	r28
 936:	57 95       	ror	r21
 938:	47 95       	ror	r20
 93a:	f7 94       	ror	r15
 93c:	e7 94       	ror	r14
 93e:	1a 95       	dec	r17
 940:	c1 f7       	brne	.-16     	; 0x932 <__stack+0x33>
 942:	e8 e6       	ldi	r30, 0x68	; 104
 944:	f0 e0       	ldi	r31, 0x00	; 0
 946:	68 94       	set
 948:	15 90       	lpm	r1, Z+
 94a:	15 91       	lpm	r17, Z+
 94c:	35 91       	lpm	r19, Z+
 94e:	65 91       	lpm	r22, Z+
 950:	95 91       	lpm	r25, Z+
 952:	05 90       	lpm	r0, Z+
 954:	7f e2       	ldi	r23, 0x2F	; 47
 956:	73 95       	inc	r23
 958:	e1 18       	sub	r14, r1
 95a:	f1 0a       	sbc	r15, r17
 95c:	43 0b       	sbc	r20, r19
 95e:	56 0b       	sbc	r21, r22
 960:	c9 0b       	sbc	r28, r25
 962:	d0 09       	sbc	r29, r0
 964:	c0 f7       	brcc	.-16     	; 0x956 <__stack+0x57>
 966:	e1 0c       	add	r14, r1
 968:	f1 1e       	adc	r15, r17
 96a:	43 1f       	adc	r20, r19
 96c:	56 1f       	adc	r21, r22
 96e:	c9 1f       	adc	r28, r25
 970:	d0 1d       	adc	r29, r0
 972:	7e f4       	brtc	.+30     	; 0x992 <__stack+0x93>
 974:	70 33       	cpi	r23, 0x30	; 48
 976:	11 f4       	brne	.+4      	; 0x97c <__stack+0x7d>
 978:	8a 95       	dec	r24
 97a:	e6 cf       	rjmp	.-52     	; 0x948 <__stack+0x49>
 97c:	e8 94       	clt
 97e:	01 50       	subi	r16, 0x01	; 1
 980:	30 f0       	brcs	.+12     	; 0x98e <__stack+0x8f>
 982:	08 0f       	add	r16, r24
 984:	0a f4       	brpl	.+2      	; 0x988 <__stack+0x89>
 986:	00 27       	eor	r16, r16
 988:	02 17       	cp	r16, r18
 98a:	08 f4       	brcc	.+2      	; 0x98e <__stack+0x8f>
 98c:	20 2f       	mov	r18, r16
 98e:	23 95       	inc	r18
 990:	02 2f       	mov	r16, r18
 992:	7a 33       	cpi	r23, 0x3A	; 58
 994:	28 f0       	brcs	.+10     	; 0x9a0 <__stack+0xa1>
 996:	79 e3       	ldi	r23, 0x39	; 57
 998:	7d 93       	st	X+, r23
 99a:	2a 95       	dec	r18
 99c:	e9 f7       	brne	.-6      	; 0x998 <__stack+0x99>
 99e:	10 c0       	rjmp	.+32     	; 0x9c0 <__stack+0xc1>
 9a0:	7d 93       	st	X+, r23
 9a2:	2a 95       	dec	r18
 9a4:	89 f6       	brne	.-94     	; 0x948 <__stack+0x49>
 9a6:	06 94       	lsr	r0
 9a8:	97 95       	ror	r25
 9aa:	67 95       	ror	r22
 9ac:	37 95       	ror	r19
 9ae:	17 95       	ror	r17
 9b0:	17 94       	ror	r1
 9b2:	e1 18       	sub	r14, r1
 9b4:	f1 0a       	sbc	r15, r17
 9b6:	43 0b       	sbc	r20, r19
 9b8:	56 0b       	sbc	r21, r22
 9ba:	c9 0b       	sbc	r28, r25
 9bc:	d0 09       	sbc	r29, r0
 9be:	98 f0       	brcs	.+38     	; 0x9e6 <__stack+0xe7>
 9c0:	23 95       	inc	r18
 9c2:	7e 91       	ld	r23, -X
 9c4:	73 95       	inc	r23
 9c6:	7a 33       	cpi	r23, 0x3A	; 58
 9c8:	08 f0       	brcs	.+2      	; 0x9cc <__stack+0xcd>
 9ca:	70 e3       	ldi	r23, 0x30	; 48
 9cc:	7c 93       	st	X, r23
 9ce:	20 13       	cpse	r18, r16
 9d0:	b8 f7       	brcc	.-18     	; 0x9c0 <__stack+0xc1>
 9d2:	7e 91       	ld	r23, -X
 9d4:	70 61       	ori	r23, 0x10	; 16
 9d6:	7d 93       	st	X+, r23
 9d8:	30 f0       	brcs	.+12     	; 0x9e6 <__stack+0xe7>
 9da:	83 95       	inc	r24
 9dc:	71 e3       	ldi	r23, 0x31	; 49
 9de:	7d 93       	st	X+, r23
 9e0:	70 e3       	ldi	r23, 0x30	; 48
 9e2:	2a 95       	dec	r18
 9e4:	e1 f7       	brne	.-8      	; 0x9de <__stack+0xdf>
 9e6:	11 24       	eor	r1, r1
 9e8:	ef 90       	pop	r14
 9ea:	ff 90       	pop	r15
 9ec:	0f 91       	pop	r16
 9ee:	1f 91       	pop	r17
 9f0:	cf 91       	pop	r28
 9f2:	df 91       	pop	r29
 9f4:	99 27       	eor	r25, r25
 9f6:	87 fd       	sbrc	r24, 7
 9f8:	90 95       	com	r25
 9fa:	08 95       	ret

000009fc <__prologue_saves__>:
 9fc:	2f 92       	push	r2
 9fe:	3f 92       	push	r3
 a00:	4f 92       	push	r4
 a02:	5f 92       	push	r5
 a04:	6f 92       	push	r6
 a06:	7f 92       	push	r7
 a08:	8f 92       	push	r8
 a0a:	9f 92       	push	r9
 a0c:	af 92       	push	r10
 a0e:	bf 92       	push	r11
 a10:	cf 92       	push	r12
 a12:	df 92       	push	r13
 a14:	ef 92       	push	r14
 a16:	ff 92       	push	r15
 a18:	0f 93       	push	r16
 a1a:	1f 93       	push	r17
 a1c:	cf 93       	push	r28
 a1e:	df 93       	push	r29
 a20:	cd b7       	in	r28, 0x3d	; 61
 a22:	de b7       	in	r29, 0x3e	; 62
 a24:	ca 1b       	sub	r28, r26
 a26:	db 0b       	sbc	r29, r27
 a28:	0f b6       	in	r0, 0x3f	; 63
 a2a:	f8 94       	cli
 a2c:	de bf       	out	0x3e, r29	; 62
 a2e:	0f be       	out	0x3f, r0	; 63
 a30:	cd bf       	out	0x3d, r28	; 61
 a32:	09 94       	ijmp

00000a34 <__epilogue_restores__>:
 a34:	2a 88       	ldd	r2, Y+18	; 0x12
 a36:	39 88       	ldd	r3, Y+17	; 0x11
 a38:	48 88       	ldd	r4, Y+16	; 0x10
 a3a:	5f 84       	ldd	r5, Y+15	; 0x0f
 a3c:	6e 84       	ldd	r6, Y+14	; 0x0e
 a3e:	7d 84       	ldd	r7, Y+13	; 0x0d
 a40:	8c 84       	ldd	r8, Y+12	; 0x0c
 a42:	9b 84       	ldd	r9, Y+11	; 0x0b
 a44:	aa 84       	ldd	r10, Y+10	; 0x0a
 a46:	b9 84       	ldd	r11, Y+9	; 0x09
 a48:	c8 84       	ldd	r12, Y+8	; 0x08
 a4a:	df 80       	ldd	r13, Y+7	; 0x07
 a4c:	ee 80       	ldd	r14, Y+6	; 0x06
 a4e:	fd 80       	ldd	r15, Y+5	; 0x05
 a50:	0c 81       	ldd	r16, Y+4	; 0x04
 a52:	1b 81       	ldd	r17, Y+3	; 0x03
 a54:	aa 81       	ldd	r26, Y+2	; 0x02
 a56:	b9 81       	ldd	r27, Y+1	; 0x01
 a58:	ce 0f       	add	r28, r30
 a5a:	d1 1d       	adc	r29, r1
 a5c:	0f b6       	in	r0, 0x3f	; 63
 a5e:	f8 94       	cli
 a60:	de bf       	out	0x3e, r29	; 62
 a62:	0f be       	out	0x3f, r0	; 63
 a64:	cd bf       	out	0x3d, r28	; 61
 a66:	ed 01       	movw	r28, r26
 a68:	08 95       	ret

00000a6a <_exit>:
 a6a:	f8 94       	cli

00000a6c <__stop_program>:
 a6c:	ff cf       	rjmp	.-2      	; 0xa6c <__stop_program>
